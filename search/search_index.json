{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ShuttleK Kafka Event Bus Library","title":"Home"},{"location":"#shuttlek","text":"Kafka Event Bus Library","title":"ShuttleK"},{"location":"api/shuttlek/","text":"shuttlek Packages Name Summary com.neutrine.shuttlek.common com.neutrine.shuttlek.common.serdes com.neutrine.shuttlek.common.serializer com.neutrine.shuttlek.consumer com.neutrine.shuttlek.producer Index All Types","title":"Index"},{"location":"api/shuttlek/#packages","text":"Name Summary com.neutrine.shuttlek.common com.neutrine.shuttlek.common.serdes com.neutrine.shuttlek.common.serializer com.neutrine.shuttlek.consumer com.neutrine.shuttlek.producer","title":"Packages"},{"location":"api/shuttlek/#index","text":"All Types","title":"Index"},{"location":"api/shuttlek/alltypes/","text":"All Types Name Summary com.neutrine.shuttlek.consumer.ConsumerMessage | com.neutrine.shuttlek.consumer.ConsumerRecordFilter Filter for Schemas | com.neutrine.shuttlek.consumer.ConsumerRecordProcessor Processor for ConsumerRecord. | (extensions in package com.neutrine.shuttlek.common) org.apache.kafka.common.header.Headers | com.neutrine.shuttlek.producer.KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . | com.neutrine.shuttlek.consumer.MessageHandler | com.neutrine.shuttlek.producer.ProducerMessage Encapsulates a message to be sent to kafka. | com.neutrine.shuttlek.common.Schema Schema data class | com.neutrine.shuttlek.common.serdes.Serdes Serializer and deserializer interface. | com.neutrine.shuttlek.common.serializer.SerializerType Serializer types | com.neutrine.shuttlek.consumer.TopicConsumer TopicConsumer","title":"Index"},{"location":"api/shuttlek/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekconsumerconsumermessage","text":"|","title":"com.neutrine.shuttlek.consumer.ConsumerMessage"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekconsumerconsumerrecordfilter","text":"Filter for Schemas |","title":"com.neutrine.shuttlek.consumer.ConsumerRecordFilter"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekconsumerconsumerrecordprocessor","text":"Processor for ConsumerRecord. | (extensions in package com.neutrine.shuttlek.common)","title":"com.neutrine.shuttlek.consumer.ConsumerRecordProcessor"},{"location":"api/shuttlek/alltypes/#orgapachekafkacommonheaderheaders","text":"|","title":"org.apache.kafka.common.header.Headers"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekproducerkafkamessagepublisher","text":"A kafka message publisher for the given kafkaProducer . |","title":"com.neutrine.shuttlek.producer.KafkaMessagePublisher"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekconsumermessagehandler","text":"|","title":"com.neutrine.shuttlek.consumer.MessageHandler"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekproducerproducermessage","text":"Encapsulates a message to be sent to kafka. |","title":"com.neutrine.shuttlek.producer.ProducerMessage"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekcommonschema","text":"Schema data class |","title":"com.neutrine.shuttlek.common.Schema"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekcommonserdesserdes","text":"Serializer and deserializer interface. |","title":"com.neutrine.shuttlek.common.serdes.Serdes"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekcommonserializerserializertype","text":"Serializer types |","title":"com.neutrine.shuttlek.common.serializer.SerializerType"},{"location":"api/shuttlek/alltypes/#comneutrineshuttlekconsumertopicconsumer","text":"TopicConsumer","title":"com.neutrine.shuttlek.consumer.TopicConsumer"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/","text":"shuttlek / com.neutrine.shuttlek.common Package com.neutrine.shuttlek.common Types Name Summary Schema Schema data class data class Schema Extensions for External Classes Name Summary org.apache.kafka.common.header.Headers","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/#package-comneutrineshuttlekcommon","text":"","title":"Package com.neutrine.shuttlek.common"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/#types","text":"Name Summary Schema Schema data class data class Schema","title":"Types"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/#extensions-for-external-classes","text":"Name Summary org.apache.kafka.common.header.Headers","title":"Extensions for External Classes"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/","text":"shuttlek / com.neutrine.shuttlek.common / Schema Schema data class Schema Schema data class Constructors Name Summary <init> Schema data class Schema(name: String , version: String ) Properties Name Summary name Schema name val name: String version Schema version val version: String","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/#schema","text":"data class Schema Schema data class","title":"Schema"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/#constructors","text":"Name Summary <init> Schema data class Schema(name: String , version: String )","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/#properties","text":"Name Summary name Schema name val name: String version Schema version val version: String","title":"Properties"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/-init-/","text":"shuttlek / com.neutrine.shuttlek.common / Schema / <init> <init> Schema(name: String , version: String ) Schema data class","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/-init-/#init","text":"Schema(name: String , version: String ) Schema data class","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/name/","text":"shuttlek / com.neutrine.shuttlek.common / Schema / name name val name: String Schema name Property name - Schema name","title":"Name"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/name/#name","text":"val name: String Schema name","title":"name"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/name/#property","text":"name - Schema name","title":"Property"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/version/","text":"shuttlek / com.neutrine.shuttlek.common / Schema / version version val version: String Schema version Property version - Schema version Author Luiz Pican\u00e7o","title":"Version"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/version/#version","text":"val version: String Schema version","title":"version"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/-schema/version/#property","text":"version - Schema version Author Luiz Pican\u00e7o","title":"Property"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/","text":"shuttlek / com.neutrine.shuttlek.common / org.apache.kafka.common.header.Headers Extensions for org.apache.kafka.common.header.Headers Name Summary valueAsString Returns the last header value for the given key fun Headers.valueAsString(key: String ): String ?","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/#extensions-for-orgapachekafkacommonheaderheaders","text":"Name Summary valueAsString Returns the last header value for the given key fun Headers.valueAsString(key: String ): String ?","title":"Extensions for org.apache.kafka.common.header.Headers"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/value-as-string/","text":"shuttlek / com.neutrine.shuttlek.common / org.apache.kafka.common.header.Headers / valueAsString valueAsString fun Headers.valueAsString(key: String ): String ? Returns the last header value for the given key Author Luiz Pican\u00e7o","title":"Value as string"},{"location":"api/shuttlek/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/value-as-string/#valueasstring","text":"fun Headers.valueAsString(key: String ): String ? Returns the last header value for the given key Author Luiz Pican\u00e7o","title":"valueAsString"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/","text":"shuttlek / com.neutrine.shuttlek.common.serdes Package com.neutrine.shuttlek.common.serdes Types Name Summary Serdes Serializer and deserializer interface. interface Serdes","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/#package-comneutrineshuttlekcommonserdes","text":"","title":"Package com.neutrine.shuttlek.common.serdes"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/#types","text":"Name Summary Serdes Serializer and deserializer interface. interface Serdes","title":"Types"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/","text":"shuttlek / com.neutrine.shuttlek.common.serdes / Serdes Serdes interface Serdes Serializer and deserializer interface. Author Luiz Pican\u00e7o Functions Name Summary deserialize Deserialize the the given value to deserializeToType . abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T serialize Serialize the the given value to ByteArray . abstract fun serialize(value: Any ): ByteArray","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/#serdes","text":"interface Serdes Serializer and deserializer interface. Author Luiz Pican\u00e7o","title":"Serdes"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/#functions","text":"Name Summary deserialize Deserialize the the given value to deserializeToType . abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T serialize Serialize the the given value to ByteArray . abstract fun serialize(value: Any ): ByteArray","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/deserialize/","text":"shuttlek / com.neutrine.shuttlek.common.serdes / Serdes / deserialize deserialize abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T Deserialize the the given value to deserializeToType .","title":"Deserialize"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/deserialize/#deserialize","text":"abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T Deserialize the the given value to deserializeToType .","title":"deserialize"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/serialize/","text":"shuttlek / com.neutrine.shuttlek.common.serdes / Serdes / serialize serialize abstract fun serialize(value: Any ): ByteArray Serialize the the given value to ByteArray .","title":"Serialize"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serdes/-serdes/serialize/#serialize","text":"abstract fun serialize(value: Any ): ByteArray Serialize the the given value to ByteArray .","title":"serialize"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/","text":"shuttlek / com.neutrine.shuttlek.common.serializer Package com.neutrine.shuttlek.common.serializer Types Name Summary SerializerType Serializer types enum class SerializerType","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/#package-comneutrineshuttlekcommonserializer","text":"","title":"Package com.neutrine.shuttlek.common.serializer"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/#types","text":"Name Summary SerializerType Serializer types enum class SerializerType","title":"Types"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/","text":"shuttlek / com.neutrine.shuttlek.common.serializer / SerializerType SerializerType enum class SerializerType Serializer types Author Luiz Pican\u00e7o Enum Values Name Summary Json Json serializer type Properties Name Summary code val code: String Companion Object Functions Name Summary parseCode fun parseCode(code: String ): SerializerType","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/#serializertype","text":"enum class SerializerType Serializer types Author Luiz Pican\u00e7o","title":"SerializerType"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/#enum-values","text":"Name Summary Json Json serializer type","title":"Enum Values"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/#properties","text":"Name Summary code val code: String","title":"Properties"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/#companion-object-functions","text":"Name Summary parseCode fun parseCode(code: String ): SerializerType","title":"Companion Object Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/-json/","text":"shuttlek / com.neutrine.shuttlek.common.serializer / SerializerType / Json Json Json Json serializer type","title":" json"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/-json/#json","text":"Json Json serializer type","title":"Json"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/code/","text":"shuttlek / com.neutrine.shuttlek.common.serializer / SerializerType / code code val code: String","title":"Code"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/code/#code","text":"val code: String","title":"code"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/parse-code/","text":"shuttlek / com.neutrine.shuttlek.common.serializer / SerializerType / parseCode parseCode fun parseCode(code: String ): SerializerType","title":"Parse code"},{"location":"api/shuttlek/com.neutrine.shuttlek.common.serializer/-serializer-type/parse-code/#parsecode","text":"fun parseCode(code: String ): SerializerType","title":"parseCode"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/","text":"shuttlek / com.neutrine.shuttlek.consumer Package com.neutrine.shuttlek.consumer Types Name Summary ConsumerMessage class ConsumerMessage ConsumerRecordFilter Filter for Schemas class ConsumerRecordFilter ConsumerRecordProcessor Processor for ConsumerRecord. class ConsumerRecordProcessor MessageHandler interface MessageHandler TopicConsumer TopicConsumer class TopicConsumer","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/#package-comneutrineshuttlekconsumer","text":"","title":"Package com.neutrine.shuttlek.consumer"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/#types","text":"Name Summary ConsumerMessage class ConsumerMessage ConsumerRecordFilter Filter for Schemas class ConsumerRecordFilter ConsumerRecordProcessor Processor for ConsumerRecord. class ConsumerRecordProcessor MessageHandler interface MessageHandler TopicConsumer TopicConsumer class TopicConsumer","title":"Types"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage ConsumerMessage class ConsumerMessage Constructors Name Summary <init> ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?) Properties Name Summary key val key: String partition val partition: Int schemaName val schemaName: String ? schemaVersion val schemaVersion: String ? serializerType val serializerType: SerializerType ? value val value: ByteArray Functions Name Summary valueAs Deserialize the value as a deserializeToType type fun <T : Any > valueAs(deserializeToType: KClass <T>): T","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/#consumermessage","text":"class ConsumerMessage","title":"ConsumerMessage"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/#constructors","text":"Name Summary <init> ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?)","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/#properties","text":"Name Summary key val key: String partition val partition: Int schemaName val schemaName: String ? schemaVersion val schemaVersion: String ? serializerType val serializerType: SerializerType ? value val value: ByteArray","title":"Properties"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/#functions","text":"Name Summary valueAs Deserialize the value as a deserializeToType type fun <T : Any > valueAs(deserializeToType: KClass <T>): T","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/-init-/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / <init> <init> ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?)","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/-init-/#init","text":"ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?)","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/key/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / key key val key: String","title":"Key"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/key/#key","text":"val key: String","title":"key"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/partition/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / partition partition val partition: Int","title":"Partition"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/partition/#partition","text":"val partition: Int","title":"partition"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/schema-name/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / schemaName schemaName val schemaName: String ?","title":"Schema name"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/schema-name/#schemaname","text":"val schemaName: String ?","title":"schemaName"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/schema-version/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / schemaVersion schemaVersion val schemaVersion: String ?","title":"Schema version"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/schema-version/#schemaversion","text":"val schemaVersion: String ?","title":"schemaVersion"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/serializer-type/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / serializerType serializerType val serializerType: SerializerType ?","title":"Serializer type"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/serializer-type/#serializertype","text":"val serializerType: SerializerType ?","title":"serializerType"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/value-as/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / valueAs valueAs fun <T : Any > valueAs(deserializeToType: KClass <T>): T Deserialize the value as a deserializeToType type Parameters deserializeToType - Type to deserialize the value Return value deserialized as deserializeToType","title":"Value as"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/value-as/#valueas","text":"fun <T : Any > valueAs(deserializeToType: KClass <T>): T Deserialize the value as a deserializeToType type","title":"valueAs"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/value-as/#parameters","text":"deserializeToType - Type to deserialize the value Return value deserialized as deserializeToType","title":"Parameters"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/value/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerMessage / value value val value: ByteArray","title":"Value"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-message/value/#value","text":"val value: ByteArray","title":"value"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerRecordFilter ConsumerRecordFilter class ConsumerRecordFilter Filter for Schemas Author Luiz Pican\u00e7o Constructors Name Summary <init> Filter for Schemas ConsumerRecordFilter(schemaNames: List < String > = emptyList()) Functions Name Summary filter Returns true if a message should be processed. fun filter(schemaName: String ?): Boolean","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/#consumerrecordfilter","text":"class ConsumerRecordFilter Filter for Schemas Author Luiz Pican\u00e7o","title":"ConsumerRecordFilter"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/#constructors","text":"Name Summary <init> Filter for Schemas ConsumerRecordFilter(schemaNames: List < String > = emptyList())","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/#functions","text":"Name Summary filter Returns true if a message should be processed. fun filter(schemaName: String ?): Boolean","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/-init-/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerRecordFilter / <init> <init> ConsumerRecordFilter(schemaNames: List < String > = emptyList()) Filter for Schemas Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/-init-/#init","text":"ConsumerRecordFilter(schemaNames: List < String > = emptyList()) Filter for Schemas Author Luiz Pican\u00e7o","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/filter/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerRecordFilter / filter filter fun filter(schemaName: String ?): Boolean Returns true if a message should be processed. Parameters schemaName - Name of the schema to filter.","title":"Filter"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/filter/#filter","text":"fun filter(schemaName: String ?): Boolean Returns true if a message should be processed.","title":"filter"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-filter/filter/#parameters","text":"schemaName - Name of the schema to filter.","title":"Parameters"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerRecordProcessor ConsumerRecordProcessor class ConsumerRecordProcessor Processor for ConsumerRecord. Author Luiz Pican\u00e7o Constructors Name Summary <init> Processor for ConsumerRecord. ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter()) Functions Name Summary process fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/#consumerrecordprocessor","text":"class ConsumerRecordProcessor Processor for ConsumerRecord. Author Luiz Pican\u00e7o","title":"ConsumerRecordProcessor"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/#constructors","text":"Name Summary <init> Processor for ConsumerRecord. ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter())","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/#functions","text":"Name Summary process fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/-init-/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerRecordProcessor / <init> <init> ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter()) Processor for ConsumerRecord. Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/-init-/#init","text":"ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter()) Processor for ConsumerRecord. Author Luiz Pican\u00e7o","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/process/","text":"shuttlek / com.neutrine.shuttlek.consumer / ConsumerRecordProcessor / process process fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"Process"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-consumer-record-processor/process/#process","text":"fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"process"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-message-handler/","text":"shuttlek / com.neutrine.shuttlek.consumer / MessageHandler MessageHandler interface MessageHandler Functions Name Summary handle abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-message-handler/#messagehandler","text":"interface MessageHandler","title":"MessageHandler"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-message-handler/#functions","text":"Name Summary handle abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-message-handler/handle/","text":"shuttlek / com.neutrine.shuttlek.consumer / MessageHandler / handle handle abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"Handle"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-message-handler/handle/#handle","text":"abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"handle"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/","text":"shuttlek / com.neutrine.shuttlek.consumer / TopicConsumer TopicConsumer class TopicConsumer TopicConsumer Parameters kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o Constructors Name Summary <init> TopicConsumer TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1)) Properties Name Summary pollTimeout The maximum time to block between each poll. val pollTimeout: Duration Functions Name Summary start Starts the topic consumer. fun start(vararg topics: String ): Unit","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/#topicconsumer","text":"class TopicConsumer TopicConsumer","title":"TopicConsumer"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/#parameters","text":"kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o","title":"Parameters"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/#constructors","text":"Name Summary <init> TopicConsumer TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1))","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/#properties","text":"Name Summary pollTimeout The maximum time to block between each poll. val pollTimeout: Duration","title":"Properties"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/#functions","text":"Name Summary start Starts the topic consumer. fun start(vararg topics: String ): Unit","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/-init-/","text":"shuttlek / com.neutrine.shuttlek.consumer / TopicConsumer / <init> <init> TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1)) TopicConsumer Parameters kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/-init-/#init","text":"TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1)) TopicConsumer","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/-init-/#parameters","text":"kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o","title":"Parameters"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/poll-timeout/","text":"shuttlek / com.neutrine.shuttlek.consumer / TopicConsumer / pollTimeout pollTimeout val pollTimeout: Duration The maximum time to block between each poll.","title":"Poll timeout"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/poll-timeout/#polltimeout","text":"val pollTimeout: Duration The maximum time to block between each poll.","title":"pollTimeout"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/start/","text":"shuttlek / com.neutrine.shuttlek.consumer / TopicConsumer / start start fun start(vararg topics: String ): Unit Starts the topic consumer. Parameters topics - List of the topics to subscribe.","title":"Start"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/start/#start","text":"fun start(vararg topics: String ): Unit Starts the topic consumer.","title":"start"},{"location":"api/shuttlek/com.neutrine.shuttlek.consumer/-topic-consumer/start/#parameters","text":"topics - List of the topics to subscribe.","title":"Parameters"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/","text":"shuttlek / com.neutrine.shuttlek.producer Package com.neutrine.shuttlek.producer Types Name Summary KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . class KafkaMessagePublisher ProducerMessage Encapsulates a message to be sent to kafka. data class ProducerMessage","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/#package-comneutrineshuttlekproducer","text":"","title":"Package com.neutrine.shuttlek.producer"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/#types","text":"Name Summary KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . class KafkaMessagePublisher ProducerMessage Encapsulates a message to be sent to kafka. data class ProducerMessage","title":"Types"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/","text":"shuttlek / com.neutrine.shuttlek.producer / KafkaMessagePublisher KafkaMessagePublisher class KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o Constructors Name Summary <init> A kafka message publisher for the given kafkaProducer . KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >) Functions Name Summary publish Publish the given producerMessage to kafka fun publish(producerMessage: ProducerMessage ): Unit publishAsync Publish the given producerMessage to kafka asynchronous and return a Future fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata>","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/#kafkamessagepublisher","text":"class KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o","title":"KafkaMessagePublisher"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/#constructors","text":"Name Summary <init> A kafka message publisher for the given kafkaProducer . KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >)","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/#functions","text":"Name Summary publish Publish the given producerMessage to kafka fun publish(producerMessage: ProducerMessage ): Unit publishAsync Publish the given producerMessage to kafka asynchronous and return a Future fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata>","title":"Functions"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/-init-/","text":"shuttlek / com.neutrine.shuttlek.producer / KafkaMessagePublisher / <init> <init> KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >) A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/-init-/#init","text":"KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >) A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish-async/","text":"shuttlek / com.neutrine.shuttlek.producer / KafkaMessagePublisher / publishAsync publishAsync fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata> Publish the given producerMessage to kafka asynchronous and return a Future","title":"Publish async"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish-async/#publishasync","text":"fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata> Publish the given producerMessage to kafka asynchronous and return a Future","title":"publishAsync"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish/","text":"shuttlek / com.neutrine.shuttlek.producer / KafkaMessagePublisher / publish publish fun publish(producerMessage: ProducerMessage ): Unit Publish the given producerMessage to kafka","title":"Publish"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish/#publish","text":"fun publish(producerMessage: ProducerMessage ): Unit Publish the given producerMessage to kafka","title":"publish"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage ProducerMessage data class ProducerMessage Encapsulates a message to be sent to kafka. Constructors Name Summary <init> Encapsulates a message to be sent to kafka. ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null) Properties Name Summary key Message key value val key: String ? schema Schema to use for message serialization val schema: Schema ? serializerType Serializer to use when sending the message val serializerType: SerializerType topic Kafka topic name val topic: String value Message content val value: Any","title":"Index"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/#producermessage","text":"data class ProducerMessage Encapsulates a message to be sent to kafka.","title":"ProducerMessage"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/#constructors","text":"Name Summary <init> Encapsulates a message to be sent to kafka. ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null)","title":"Constructors"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/#properties","text":"Name Summary key Message key value val key: String ? schema Schema to use for message serialization val schema: Schema ? serializerType Serializer to use when sending the message val serializerType: SerializerType topic Kafka topic name val topic: String value Message content val value: Any","title":"Properties"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/-init-/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage / <init> <init> ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null) Encapsulates a message to be sent to kafka.","title":" init "},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/-init-/#init","text":"ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null) Encapsulates a message to be sent to kafka.","title":"&lt;init&gt;"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/key/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage / key key val key: String ? Message key value Property key - Message key value","title":"Key"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/key/#key","text":"val key: String ? Message key value","title":"key"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/key/#property","text":"key - Message key value","title":"Property"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/schema/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage / schema schema val schema: Schema ? Schema to use for message serialization Property schema - Schema to use for message serialization Author Luiz Pican\u00e7o","title":"Schema"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/schema/#schema","text":"val schema: Schema ? Schema to use for message serialization","title":"schema"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/schema/#property","text":"schema - Schema to use for message serialization Author Luiz Pican\u00e7o","title":"Property"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/serializer-type/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage / serializerType serializerType val serializerType: SerializerType Serializer to use when sending the message Property serializerType - Serializer to use when sending the message","title":"Serializer type"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/serializer-type/#serializertype","text":"val serializerType: SerializerType Serializer to use when sending the message","title":"serializerType"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/serializer-type/#property","text":"serializerType - Serializer to use when sending the message","title":"Property"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/topic/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage / topic topic val topic: String Kafka topic name Property topic - Kafka topic name","title":"Topic"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/topic/#topic","text":"val topic: String Kafka topic name","title":"topic"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/topic/#property","text":"topic - Kafka topic name","title":"Property"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/value/","text":"shuttlek / com.neutrine.shuttlek.producer / ProducerMessage / value value val value: Any Message content Property value - Message content","title":"Value"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/value/#value","text":"val value: Any Message content","title":"value"},{"location":"api/shuttlek/com.neutrine.shuttlek.producer/-producer-message/value/#property","text":"value - Message content","title":"Property"},{"location":"api/shuttlek-core/","text":"shuttlek-core Packages Name Summary com.neutrine.shuttlek.common com.neutrine.shuttlek.common.serdes com.neutrine.shuttlek.common.serializer com.neutrine.shuttlek.consumer com.neutrine.shuttlek.producer Index All Types","title":"shuttlek-core"},{"location":"api/shuttlek-core/#packages","text":"Name Summary com.neutrine.shuttlek.common com.neutrine.shuttlek.common.serdes com.neutrine.shuttlek.common.serializer com.neutrine.shuttlek.consumer com.neutrine.shuttlek.producer","title":"Packages"},{"location":"api/shuttlek-core/#index","text":"All Types","title":"Index"},{"location":"api/shuttlek-core/alltypes/","text":"All Types Name Summary com.neutrine.shuttlek.consumer.ConsumerMessage | com.neutrine.shuttlek.consumer.ConsumerRecordFilter Filter for Schemas | com.neutrine.shuttlek.consumer.ConsumerRecordProcessor Processor for ConsumerRecord. | (extensions in package com.neutrine.shuttlek.common) org.apache.kafka.common.header.Headers | com.neutrine.shuttlek.producer.KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . | com.neutrine.shuttlek.consumer.MessageHandler | com.neutrine.shuttlek.producer.ProducerMessage Encapsulates a message to be sent to kafka. | com.neutrine.shuttlek.common.Schema Schema data class | com.neutrine.shuttlek.common.serdes.Serdes Serializer and deserializer interface. | com.neutrine.shuttlek.common.serializer.SerializerType Serializer types | com.neutrine.shuttlek.consumer.TopicConsumer TopicConsumer","title":"Index"},{"location":"api/shuttlek-core/alltypes/#all-types","text":"Name Summary","title":"All Types"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekconsumerconsumermessage","text":"|","title":"com.neutrine.shuttlek.consumer.ConsumerMessage"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekconsumerconsumerrecordfilter","text":"Filter for Schemas |","title":"com.neutrine.shuttlek.consumer.ConsumerRecordFilter"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekconsumerconsumerrecordprocessor","text":"Processor for ConsumerRecord. | (extensions in package com.neutrine.shuttlek.common)","title":"com.neutrine.shuttlek.consumer.ConsumerRecordProcessor"},{"location":"api/shuttlek-core/alltypes/#orgapachekafkacommonheaderheaders","text":"|","title":"org.apache.kafka.common.header.Headers"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekproducerkafkamessagepublisher","text":"A kafka message publisher for the given kafkaProducer . |","title":"com.neutrine.shuttlek.producer.KafkaMessagePublisher"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekconsumermessagehandler","text":"|","title":"com.neutrine.shuttlek.consumer.MessageHandler"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekproducerproducermessage","text":"Encapsulates a message to be sent to kafka. |","title":"com.neutrine.shuttlek.producer.ProducerMessage"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekcommonschema","text":"Schema data class |","title":"com.neutrine.shuttlek.common.Schema"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekcommonserdesserdes","text":"Serializer and deserializer interface. |","title":"com.neutrine.shuttlek.common.serdes.Serdes"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekcommonserializerserializertype","text":"Serializer types |","title":"com.neutrine.shuttlek.common.serializer.SerializerType"},{"location":"api/shuttlek-core/alltypes/#comneutrineshuttlekconsumertopicconsumer","text":"TopicConsumer","title":"com.neutrine.shuttlek.consumer.TopicConsumer"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/","text":"shuttlek-core / com.neutrine.shuttlek.common Package com.neutrine.shuttlek.common Types Name Summary Schema Schema data class data class Schema Extensions for External Classes Name Summary org.apache.kafka.common.header.Headers","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/#package-comneutrineshuttlekcommon","text":"","title":"Package com.neutrine.shuttlek.common"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/#types","text":"Name Summary Schema Schema data class data class Schema","title":"Types"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/#extensions-for-external-classes","text":"Name Summary org.apache.kafka.common.header.Headers","title":"Extensions for External Classes"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/","text":"shuttlek-core / com.neutrine.shuttlek.common / Schema Schema data class Schema Schema data class Constructors Name Summary <init> Schema data class Schema(name: String , version: String ) Properties Name Summary name Schema name val name: String version Schema version val version: String","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/#schema","text":"data class Schema Schema data class","title":"Schema"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/#constructors","text":"Name Summary <init> Schema data class Schema(name: String , version: String )","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/#properties","text":"Name Summary name Schema name val name: String version Schema version val version: String","title":"Properties"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.common / Schema / <init> <init> Schema(name: String , version: String ) Schema data class","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/-init-/#init","text":"Schema(name: String , version: String ) Schema data class","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/name/","text":"shuttlek-core / com.neutrine.shuttlek.common / Schema / name name val name: String Schema name Property name - Schema name","title":"Name"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/name/#name","text":"val name: String Schema name","title":"name"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/name/#property","text":"name - Schema name","title":"Property"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/version/","text":"shuttlek-core / com.neutrine.shuttlek.common / Schema / version version val version: String Schema version Property version - Schema version Author Luiz Pican\u00e7o","title":"Version"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/version/#version","text":"val version: String Schema version","title":"version"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/-schema/version/#property","text":"version - Schema version Author Luiz Pican\u00e7o","title":"Property"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/","text":"shuttlek-core / com.neutrine.shuttlek.common / org.apache.kafka.common.header.Headers Extensions for org.apache.kafka.common.header.Headers Name Summary valueAsString Returns the last header value for the given key fun Headers.valueAsString(key: String ): String ?","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/#extensions-for-orgapachekafkacommonheaderheaders","text":"Name Summary valueAsString Returns the last header value for the given key fun Headers.valueAsString(key: String ): String ?","title":"Extensions for org.apache.kafka.common.header.Headers"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/value-as-string/","text":"shuttlek-core / com.neutrine.shuttlek.common / org.apache.kafka.common.header.Headers / valueAsString valueAsString fun Headers.valueAsString(key: String ): String ? Returns the last header value for the given key Author Luiz Pican\u00e7o","title":"Value as string"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common/org.apache.kafka.common.header.-headers/value-as-string/#valueasstring","text":"fun Headers.valueAsString(key: String ): String ? Returns the last header value for the given key Author Luiz Pican\u00e7o","title":"valueAsString"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/","text":"shuttlek-core / com.neutrine.shuttlek.common.serdes Package com.neutrine.shuttlek.common.serdes Types Name Summary Serdes Serializer and deserializer interface. interface Serdes","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/#package-comneutrineshuttlekcommonserdes","text":"","title":"Package com.neutrine.shuttlek.common.serdes"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/#types","text":"Name Summary Serdes Serializer and deserializer interface. interface Serdes","title":"Types"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/","text":"shuttlek-core / com.neutrine.shuttlek.common.serdes / Serdes Serdes interface Serdes Serializer and deserializer interface. Author Luiz Pican\u00e7o Functions Name Summary deserialize Deserialize the the given value to deserializeToType . abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T serialize Serialize the the given value to ByteArray . abstract fun serialize(value: Any ): ByteArray","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/#serdes","text":"interface Serdes Serializer and deserializer interface. Author Luiz Pican\u00e7o","title":"Serdes"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/#functions","text":"Name Summary deserialize Deserialize the the given value to deserializeToType . abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T serialize Serialize the the given value to ByteArray . abstract fun serialize(value: Any ): ByteArray","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/deserialize/","text":"shuttlek-core / com.neutrine.shuttlek.common.serdes / Serdes / deserialize deserialize abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T Deserialize the the given value to deserializeToType .","title":"Deserialize"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/deserialize/#deserialize","text":"abstract fun <T : Any > deserialize(value: ByteArray , deserializeToType: KClass <T>): T Deserialize the the given value to deserializeToType .","title":"deserialize"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/serialize/","text":"shuttlek-core / com.neutrine.shuttlek.common.serdes / Serdes / serialize serialize abstract fun serialize(value: Any ): ByteArray Serialize the the given value to ByteArray .","title":"Serialize"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serdes/-serdes/serialize/#serialize","text":"abstract fun serialize(value: Any ): ByteArray Serialize the the given value to ByteArray .","title":"serialize"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/","text":"shuttlek-core / com.neutrine.shuttlek.common.serializer Package com.neutrine.shuttlek.common.serializer Types Name Summary SerializerType Serializer types enum class SerializerType","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/#package-comneutrineshuttlekcommonserializer","text":"","title":"Package com.neutrine.shuttlek.common.serializer"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/#types","text":"Name Summary SerializerType Serializer types enum class SerializerType","title":"Types"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/","text":"shuttlek-core / com.neutrine.shuttlek.common.serializer / SerializerType SerializerType enum class SerializerType Serializer types Author Luiz Pican\u00e7o Enum Values Name Summary Json Json serializer type Properties Name Summary code val code: String Companion Object Functions Name Summary parseCode fun parseCode(code: String ): SerializerType","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/#serializertype","text":"enum class SerializerType Serializer types Author Luiz Pican\u00e7o","title":"SerializerType"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/#enum-values","text":"Name Summary Json Json serializer type","title":"Enum Values"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/#properties","text":"Name Summary code val code: String","title":"Properties"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/#companion-object-functions","text":"Name Summary parseCode fun parseCode(code: String ): SerializerType","title":"Companion Object Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/-json/","text":"shuttlek-core / com.neutrine.shuttlek.common.serializer / SerializerType / Json Json Json Json serializer type","title":" json"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/-json/#json","text":"Json Json serializer type","title":"Json"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/code/","text":"shuttlek-core / com.neutrine.shuttlek.common.serializer / SerializerType / code code val code: String","title":"Code"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/code/#code","text":"val code: String","title":"code"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/parse-code/","text":"shuttlek-core / com.neutrine.shuttlek.common.serializer / SerializerType / parseCode parseCode fun parseCode(code: String ): SerializerType","title":"Parse code"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.common.serializer/-serializer-type/parse-code/#parsecode","text":"fun parseCode(code: String ): SerializerType","title":"parseCode"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/","text":"shuttlek-core / com.neutrine.shuttlek.consumer Package com.neutrine.shuttlek.consumer Types Name Summary ConsumerMessage class ConsumerMessage ConsumerRecordFilter Filter for Schemas class ConsumerRecordFilter ConsumerRecordProcessor Processor for ConsumerRecord. class ConsumerRecordProcessor MessageHandler interface MessageHandler TopicConsumer TopicConsumer class TopicConsumer","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/#package-comneutrineshuttlekconsumer","text":"","title":"Package com.neutrine.shuttlek.consumer"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/#types","text":"Name Summary ConsumerMessage class ConsumerMessage ConsumerRecordFilter Filter for Schemas class ConsumerRecordFilter ConsumerRecordProcessor Processor for ConsumerRecord. class ConsumerRecordProcessor MessageHandler interface MessageHandler TopicConsumer TopicConsumer class TopicConsumer","title":"Types"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage ConsumerMessage class ConsumerMessage Constructors Name Summary <init> ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?) Properties Name Summary key val key: String partition val partition: Int schemaName val schemaName: String ? schemaVersion val schemaVersion: String ? serializerType val serializerType: SerializerType ? value val value: ByteArray Functions Name Summary valueAs Deserialize the value as a deserializeToType type fun <T : Any > valueAs(deserializeToType: KClass <T>): T","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/#consumermessage","text":"class ConsumerMessage","title":"ConsumerMessage"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/#constructors","text":"Name Summary <init> ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?)","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/#properties","text":"Name Summary key val key: String partition val partition: Int schemaName val schemaName: String ? schemaVersion val schemaVersion: String ? serializerType val serializerType: SerializerType ? value val value: ByteArray","title":"Properties"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/#functions","text":"Name Summary valueAs Deserialize the value as a deserializeToType type fun <T : Any > valueAs(deserializeToType: KClass <T>): T","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / <init> <init> ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?)","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/-init-/#init","text":"ConsumerMessage(partition: Int , key: String , value: ByteArray , schemaName: String ?, schemaVersion: String ?, serializerType: SerializerType ?)","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/key/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / key key val key: String","title":"Key"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/key/#key","text":"val key: String","title":"key"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/partition/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / partition partition val partition: Int","title":"Partition"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/partition/#partition","text":"val partition: Int","title":"partition"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/schema-name/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / schemaName schemaName val schemaName: String ?","title":"Schema name"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/schema-name/#schemaname","text":"val schemaName: String ?","title":"schemaName"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/schema-version/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / schemaVersion schemaVersion val schemaVersion: String ?","title":"Schema version"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/schema-version/#schemaversion","text":"val schemaVersion: String ?","title":"schemaVersion"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/serializer-type/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / serializerType serializerType val serializerType: SerializerType ?","title":"Serializer type"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/serializer-type/#serializertype","text":"val serializerType: SerializerType ?","title":"serializerType"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/value-as/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / valueAs valueAs fun <T : Any > valueAs(deserializeToType: KClass <T>): T Deserialize the value as a deserializeToType type Parameters deserializeToType - Type to deserialize the value Return value deserialized as deserializeToType","title":"Value as"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/value-as/#valueas","text":"fun <T : Any > valueAs(deserializeToType: KClass <T>): T Deserialize the value as a deserializeToType type","title":"valueAs"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/value-as/#parameters","text":"deserializeToType - Type to deserialize the value Return value deserialized as deserializeToType","title":"Parameters"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/value/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerMessage / value value val value: ByteArray","title":"Value"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-message/value/#value","text":"val value: ByteArray","title":"value"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerRecordFilter ConsumerRecordFilter class ConsumerRecordFilter Filter for Schemas Author Luiz Pican\u00e7o Constructors Name Summary <init> Filter for Schemas ConsumerRecordFilter(schemaNames: List < String > = emptyList()) Functions Name Summary filter Returns true if a message should be processed. fun filter(schemaName: String ?): Boolean","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/#consumerrecordfilter","text":"class ConsumerRecordFilter Filter for Schemas Author Luiz Pican\u00e7o","title":"ConsumerRecordFilter"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/#constructors","text":"Name Summary <init> Filter for Schemas ConsumerRecordFilter(schemaNames: List < String > = emptyList())","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/#functions","text":"Name Summary filter Returns true if a message should be processed. fun filter(schemaName: String ?): Boolean","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerRecordFilter / <init> <init> ConsumerRecordFilter(schemaNames: List < String > = emptyList()) Filter for Schemas Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/-init-/#init","text":"ConsumerRecordFilter(schemaNames: List < String > = emptyList()) Filter for Schemas Author Luiz Pican\u00e7o","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/filter/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerRecordFilter / filter filter fun filter(schemaName: String ?): Boolean Returns true if a message should be processed. Parameters schemaName - Name of the schema to filter.","title":"Filter"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/filter/#filter","text":"fun filter(schemaName: String ?): Boolean Returns true if a message should be processed.","title":"filter"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-filter/filter/#parameters","text":"schemaName - Name of the schema to filter.","title":"Parameters"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerRecordProcessor ConsumerRecordProcessor class ConsumerRecordProcessor Processor for ConsumerRecord. Author Luiz Pican\u00e7o Constructors Name Summary <init> Processor for ConsumerRecord. ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter()) Functions Name Summary process fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/#consumerrecordprocessor","text":"class ConsumerRecordProcessor Processor for ConsumerRecord. Author Luiz Pican\u00e7o","title":"ConsumerRecordProcessor"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/#constructors","text":"Name Summary <init> Processor for ConsumerRecord. ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter())","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/#functions","text":"Name Summary process fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerRecordProcessor / <init> <init> ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter()) Processor for ConsumerRecord. Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/-init-/#init","text":"ConsumerRecordProcessor(messageHandler: MessageHandler , consumerRecordFilter: ConsumerRecordFilter = ConsumerRecordFilter()) Processor for ConsumerRecord. Author Luiz Pican\u00e7o","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/process/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / ConsumerRecordProcessor / process process fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"Process"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-consumer-record-processor/process/#process","text":"fun process(record: ConsumerRecord< String , ByteArray >): Unit","title":"process"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-message-handler/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / MessageHandler MessageHandler interface MessageHandler Functions Name Summary handle abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-message-handler/#messagehandler","text":"interface MessageHandler","title":"MessageHandler"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-message-handler/#functions","text":"Name Summary handle abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-message-handler/handle/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / MessageHandler / handle handle abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"Handle"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-message-handler/handle/#handle","text":"abstract fun handle(consumerMessage: ConsumerMessage ): Unit","title":"handle"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / TopicConsumer TopicConsumer class TopicConsumer TopicConsumer Parameters kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o Constructors Name Summary <init> TopicConsumer TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1)) Properties Name Summary pollTimeout The maximum time to block between each poll. val pollTimeout: Duration Functions Name Summary start Starts the topic consumer. fun start(vararg topics: String ): Unit","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/#topicconsumer","text":"class TopicConsumer TopicConsumer","title":"TopicConsumer"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/#parameters","text":"kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o","title":"Parameters"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/#constructors","text":"Name Summary <init> TopicConsumer TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1))","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/#properties","text":"Name Summary pollTimeout The maximum time to block between each poll. val pollTimeout: Duration","title":"Properties"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/#functions","text":"Name Summary start Starts the topic consumer. fun start(vararg topics: String ): Unit","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / TopicConsumer / <init> <init> TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1)) TopicConsumer Parameters kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/-init-/#init","text":"TopicConsumer(kafkaConsumer: KafkaConsumer< String , ByteArray >, consumerRecordProcessor: ConsumerRecordProcessor , pollTimeout: Duration = Duration.ofMinutes(1)) TopicConsumer","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/-init-/#parameters","text":"kafkaConsumer - The KafkaConsumer consumerRecordProcessor - The ConsumerRecordProcessor to use to process the messages pollTimeout - The maximum time to block between each poll. Author Luiz Pican\u00e7o","title":"Parameters"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/poll-timeout/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / TopicConsumer / pollTimeout pollTimeout val pollTimeout: Duration The maximum time to block between each poll.","title":"Poll timeout"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/poll-timeout/#polltimeout","text":"val pollTimeout: Duration The maximum time to block between each poll.","title":"pollTimeout"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/start/","text":"shuttlek-core / com.neutrine.shuttlek.consumer / TopicConsumer / start start fun start(vararg topics: String ): Unit Starts the topic consumer. Parameters topics - List of the topics to subscribe.","title":"Start"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/start/#start","text":"fun start(vararg topics: String ): Unit Starts the topic consumer.","title":"start"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.consumer/-topic-consumer/start/#parameters","text":"topics - List of the topics to subscribe.","title":"Parameters"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/","text":"shuttlek-core / com.neutrine.shuttlek.producer Package com.neutrine.shuttlek.producer Types Name Summary KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . class KafkaMessagePublisher ProducerMessage Encapsulates a message to be sent to kafka. data class ProducerMessage","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/#package-comneutrineshuttlekproducer","text":"","title":"Package com.neutrine.shuttlek.producer"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/#types","text":"Name Summary KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . class KafkaMessagePublisher ProducerMessage Encapsulates a message to be sent to kafka. data class ProducerMessage","title":"Types"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/","text":"shuttlek-core / com.neutrine.shuttlek.producer / KafkaMessagePublisher KafkaMessagePublisher class KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o Constructors Name Summary <init> A kafka message publisher for the given kafkaProducer . KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >) Functions Name Summary publish Publish the given producerMessage to kafka fun publish(producerMessage: ProducerMessage ): Unit publishAsync Publish the given producerMessage to kafka asynchronous and return a Future fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata>","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/#kafkamessagepublisher","text":"class KafkaMessagePublisher A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o","title":"KafkaMessagePublisher"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/#constructors","text":"Name Summary <init> A kafka message publisher for the given kafkaProducer . KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >)","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/#functions","text":"Name Summary publish Publish the given producerMessage to kafka fun publish(producerMessage: ProducerMessage ): Unit publishAsync Publish the given producerMessage to kafka asynchronous and return a Future fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata>","title":"Functions"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.producer / KafkaMessagePublisher / <init> <init> KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >) A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/-init-/#init","text":"KafkaMessagePublisher(kafkaProducer: KafkaProducer< String , ByteArray >) A kafka message publisher for the given kafkaProducer . Author Luiz Pican\u00e7o","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish-async/","text":"shuttlek-core / com.neutrine.shuttlek.producer / KafkaMessagePublisher / publishAsync publishAsync fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata> Publish the given producerMessage to kafka asynchronous and return a Future","title":"Publish async"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish-async/#publishasync","text":"fun publishAsync(producerMessage: ProducerMessage ): Future <RecordMetadata> Publish the given producerMessage to kafka asynchronous and return a Future","title":"publishAsync"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish/","text":"shuttlek-core / com.neutrine.shuttlek.producer / KafkaMessagePublisher / publish publish fun publish(producerMessage: ProducerMessage ): Unit Publish the given producerMessage to kafka","title":"Publish"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-kafka-message-publisher/publish/#publish","text":"fun publish(producerMessage: ProducerMessage ): Unit Publish the given producerMessage to kafka","title":"publish"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage ProducerMessage data class ProducerMessage Encapsulates a message to be sent to kafka. Constructors Name Summary <init> Encapsulates a message to be sent to kafka. ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null) Properties Name Summary key Message key value val key: String ? schema Schema to use for message serialization val schema: Schema ? serializerType Serializer to use when sending the message val serializerType: SerializerType topic Kafka topic name val topic: String value Message content val value: Any","title":"Index"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/#producermessage","text":"data class ProducerMessage Encapsulates a message to be sent to kafka.","title":"ProducerMessage"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/#constructors","text":"Name Summary <init> Encapsulates a message to be sent to kafka. ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null)","title":"Constructors"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/#properties","text":"Name Summary key Message key value val key: String ? schema Schema to use for message serialization val schema: Schema ? serializerType Serializer to use when sending the message val serializerType: SerializerType topic Kafka topic name val topic: String value Message content val value: Any","title":"Properties"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/-init-/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage / <init> <init> ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null) Encapsulates a message to be sent to kafka.","title":" init "},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/-init-/#init","text":"ProducerMessage(topic: String , key: String ? = null, value: Any , serializerType: SerializerType = SerializerType.Json, schema: Schema ? = null) Encapsulates a message to be sent to kafka.","title":"&lt;init&gt;"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/key/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage / key key val key: String ? Message key value Property key - Message key value","title":"Key"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/key/#key","text":"val key: String ? Message key value","title":"key"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/key/#property","text":"key - Message key value","title":"Property"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/schema/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage / schema schema val schema: Schema ? Schema to use for message serialization Property schema - Schema to use for message serialization Author Luiz Pican\u00e7o","title":"Schema"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/schema/#schema","text":"val schema: Schema ? Schema to use for message serialization","title":"schema"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/schema/#property","text":"schema - Schema to use for message serialization Author Luiz Pican\u00e7o","title":"Property"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/serializer-type/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage / serializerType serializerType val serializerType: SerializerType Serializer to use when sending the message Property serializerType - Serializer to use when sending the message","title":"Serializer type"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/serializer-type/#serializertype","text":"val serializerType: SerializerType Serializer to use when sending the message","title":"serializerType"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/serializer-type/#property","text":"serializerType - Serializer to use when sending the message","title":"Property"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/topic/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage / topic topic val topic: String Kafka topic name Property topic - Kafka topic name","title":"Topic"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/topic/#topic","text":"val topic: String Kafka topic name","title":"topic"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/topic/#property","text":"topic - Kafka topic name","title":"Property"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/value/","text":"shuttlek-core / com.neutrine.shuttlek.producer / ProducerMessage / value value val value: Any Message content Property value - Message content","title":"Value"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/value/#value","text":"val value: Any Message content","title":"value"},{"location":"api/shuttlek-core/com.neutrine.shuttlek.producer/-producer-message/value/#property","text":"value - Message content","title":"Property"}]}